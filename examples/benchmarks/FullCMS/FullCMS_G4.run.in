#!/bin/bash

# Script running FullCMS simulation for Geant4
TRIES=$1
if [ "$TRIES" = "" ]; then
  TRIES=10
fi
### Primary generator
GUN_PRIMARY_TYPE="e-"
GUN_PRIMARY_ENERGY=100 #GeV

### Field
FIELD_ACTIVE=1
FIELD_USE_RK=1

### Configuration
CONFIG_THREADS=1
CONFIG_EVENTS=1
CONFIG_PRIMARIES=10
CONFIG_PERFORMANCE=1

INSTALLATION_PATH=@CMAKE_INSTALL_PREFIX@
PATH="./${PATH}"
### Geometry file used
CMS_GDML="@CMAKE_INSTALL_PREFIX@/bin/examples/FullCMS/GeantV/cms2018.gdml"
### Executables
GEANT4_EXEC=$INSTALLATION_PATH/bin/examples/FullCMS/Geant4/full_cms
### Benchmark config and output
GEANT_PERFTOOLS_FILE="prof_G4.out"
BENCH_OUTPUT="bench_G4.out"
BENCH_CONFIG1="${GEANT_PERFTOOLS_FILE/prof_/}"
BENCH_CONFIG2="G4.out"

echo "### Running FullCMS for the configuration: ${BENCH_CONFIG2}"
echo "    - primary type:        $GUN_PRIMARY_TYPE"
echo "    - primary energy:      $GUN_PRIMARY_ENERGY"
echo "    - number of threads:   $CONFIG_THREADS"
echo "    - number of events:    $CONFIG_EVENTS"
echo "    - primaries per event: $CONFIG_PRIMARIES"
echo "    - performance mode:    $CONFIG_PERFORMANCE"
echo "    - field present:       $FIELD_ACTIVE"
echo "    - field Runge-Kutta:   $FIELD_USE_RK"
echo ""

echo "Geant4: testing ${BENCH_CONFIG2}" > $BENCH_OUTPUT

# Generate the Geant4 macro
cat >FullCMS_G4.mac <<EOL
#
# Geant4 macro for CMS setup
#
########################################################################
##  SET NUMBER OF THREADS (will be ignored in case of sequential Geant4)
## ---------------------------------------------------------------------
/run/numberOfThreads ${CONFIG_THREADS}
/control/verbose 0
/run/verbose 0
/tracking/verbose 0
########################################################################
##  DETECTOR AND MAGNETIC FIELD
## ---------------------------------------------------------------------
/mydet/setGdmlFile  ${CMS_GDML}
## ---------------------------------------------------------------------
EOL

if [ "$FIELD_ACTIVE" = "1" ]; then
cat >>FullCMS_G4.mac <<EOL
##/mydet/setField    0.0 tesla
##
/mydet/setField 4.0 tesla
## /mydet/useFieldMap
EOL
fi

cat >>FullCMS_G4.mac <<EOL
########################################################################
##  INIT
## ---------------------------------------------------------------------
/run/initialize
########################################################################
##  PRIMARY GENERATOR
## ---------------------------------------------------------------------
/mygun/primaryPerEvt ${CONFIG_PRIMARIES}
/mygun/particle      ${GUN_PRIMARY_TYPE}
/mygun/energy        ${GUN_PRIMARY_ENERGY} GeV
####/mygun/direction  0 1 0
/run/beamOn ${CONFIG_EVENTS}
#/process/list
EOL

# Check if the output is what we expect
# cat FullCMS_G4.mac

# Run Geant4 application

rm -f extracted_realtimes
for i in $(seq 1 $TRIES);
  do
    echo -ne " testing ${i} ..." '\r';
    if [ "$CONFIG_PERFORMANCE" = "0" ]; then
      stdbuf -o0 -e0 $GEANT4_EXEC -m FullCMS_G4.mac >g4.log 2>&1
    else
      stdbuf -o0 -e0 $GEANT4_EXEC -m FullCMS_G4.mac -p >g4.log 2>&1
    fi

    grep -o 'Real=.*' g4.log | sed -r 's/.*Real=//g' | sed -r 's/s.Sys=[0-9]*\.[0-9]*s.\[[^][]*\]//g' >> extracted_realtimes
done

# compute averages and standard deviations
awk -f - extracted_realtimes <<-EOF >> ${BENCH_OUTPUT}
{
    for(i=1; i<=\$TRIES; i++) {
        sum   +=  \$i;
        sumsq += (\$i)^2
    }
    average  = sum/$TRIES;
    sigma = sqrt($TRIES*sumsq-sum*sum)/$TRIES;
    percent = 100.*sigma/average;
}
END {
    printf "Run time for %d measurements = %.3f +/- %.3f (%.1f%)\n", $TRIES, average, sigma, percent;
}
EOF

cat $BENCH_OUTPUT
